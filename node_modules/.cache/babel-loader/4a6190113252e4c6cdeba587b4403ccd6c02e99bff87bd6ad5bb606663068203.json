{"ast":null,"code":"var _jsxFileName = \"/Users/prabeshparajuli/Desktop/Food_app/src/Store/CartProvider.js\",\n  _s = $RefreshSig$();\nimport React, { useReducer } from \"react\";\nimport CartContext from \"./cart_context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\nconst cartreducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD\":\n      const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n      const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n      if (existingCartItemIndex !== -1) {\n        const existingAmount = parseInt(state.items[existingCartItemIndex].amount, 10);\n        const newAmount = parseInt(action.item.amount, 10);\n        const updatedAmount = existingAmount + newAmount;\n\n        // Update the item's amount with the new numeric value\n        state.items[existingCartItemIndex].amount = updatedAmount;\n      } else {\n        // If it's a new item, simply add it to the items array\n        state.items.push(action.item);\n      }\n      return {\n        ...state,\n        totalAmount: updatedTotalAmount\n      };\n    case \"REMOVE\":\n      return state;\n    default:\n      return defaultCartState;\n  }\n};\nconst CartProvider = props => {\n  _s();\n  const [cartState, dispatchCartAction] = useReducer(cartreducer, defaultCartState);\n  const addItemToCarthandler = item => {\n    dispatchCartAction({\n      type: \"ADD\",\n      item: item\n    });\n  };\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n\n  // this is the value\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    // amount as in quantity not price\n    addItem: addItemToCarthandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n_c = CartProvider;\nexport default CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","useReducer","CartContext","jsxDEV","_jsxDEV","defaultCartState","items","totalAmount","cartreducer","state","action","type","updatedTotalAmount","item","price","amount","existingCartItemIndex","findIndex","id","existingAmount","parseInt","newAmount","updatedAmount","push","CartProvider","props","_s","cartState","dispatchCartAction","addItemToCarthandler","removeItemFromCartHandler","cartContext","addItem","removeItem","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/prabeshparajuli/Desktop/Food_app/src/Store/CartProvider.js"],"sourcesContent":["import React, { useReducer } from \"react\";\nimport CartContext from \"./cart_context\";\n\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0,\n};\n\nconst cartreducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD\":\n      const updatedTotalAmount =\n        state.totalAmount + action.item.price * action.item.amount;\n      const existingCartItemIndex = state.items.findIndex(\n        (item) => item.id === action.item.id\n      );\n\n      if (existingCartItemIndex !== -1) {\n        const existingAmount = parseInt(\n          state.items[existingCartItemIndex].amount,\n          10\n        );\n        const newAmount = parseInt(action.item.amount, 10);\n        const updatedAmount = existingAmount + newAmount;\n\n        // Update the item's amount with the new numeric value\n        state.items[existingCartItemIndex].amount = updatedAmount;\n      } else {\n        // If it's a new item, simply add it to the items array\n        state.items.push(action.item);\n      }\n\n      return {\n        ...state,\n        totalAmount: updatedTotalAmount,\n      };\n\n    case \"REMOVE\":\n      return state;\n\n    default:\n      return defaultCartState;\n  }\n};\n\nconst CartProvider = (props) => {\n  const [cartState, dispatchCartAction] = useReducer(\n    cartreducer,\n    defaultCartState\n  );\n\n  const addItemToCarthandler = (item) => {\n    dispatchCartAction({\n      type: \"ADD\",\n      item: item,\n    });\n  };\n\n  const removeItemFromCartHandler = (id) => {\n    dispatchCartAction({\n      type: \"REMOVE\",\n\n      id: id,\n    });\n  };\n\n  // this is the value\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount, // amount as in quantity not price\n    addItem: addItemToCarthandler,\n    removeItem: removeItemFromCartHandler,\n  };\n\n  return (\n    <CartContext.Provider value={cartContext}>\n      {props.children}\n    </CartContext.Provider>\n  );\n};\n\nexport default CartProvider;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,OAAOC,WAAW,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,gBAAgB,GAAG;EACvBC,KAAK,EAAE,EAAE;EACTC,WAAW,EAAE;AACf,CAAC;AAED,MAAMC,WAAW,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACrC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,KAAK;MACR,MAAMC,kBAAkB,GACtBH,KAAK,CAACF,WAAW,GAAGG,MAAM,CAACG,IAAI,CAACC,KAAK,GAAGJ,MAAM,CAACG,IAAI,CAACE,MAAM;MAC5D,MAAMC,qBAAqB,GAAGP,KAAK,CAACH,KAAK,CAACW,SAAS,CAChDJ,IAAI,IAAKA,IAAI,CAACK,EAAE,KAAKR,MAAM,CAACG,IAAI,CAACK,EACpC,CAAC;MAED,IAAIF,qBAAqB,KAAK,CAAC,CAAC,EAAE;QAChC,MAAMG,cAAc,GAAGC,QAAQ,CAC7BX,KAAK,CAACH,KAAK,CAACU,qBAAqB,CAAC,CAACD,MAAM,EACzC,EACF,CAAC;QACD,MAAMM,SAAS,GAAGD,QAAQ,CAACV,MAAM,CAACG,IAAI,CAACE,MAAM,EAAE,EAAE,CAAC;QAClD,MAAMO,aAAa,GAAGH,cAAc,GAAGE,SAAS;;QAEhD;QACAZ,KAAK,CAACH,KAAK,CAACU,qBAAqB,CAAC,CAACD,MAAM,GAAGO,aAAa;MAC3D,CAAC,MAAM;QACL;QACAb,KAAK,CAACH,KAAK,CAACiB,IAAI,CAACb,MAAM,CAACG,IAAI,CAAC;MAC/B;MAEA,OAAO;QACL,GAAGJ,KAAK;QACRF,WAAW,EAAEK;MACf,CAAC;IAEH,KAAK,QAAQ;MACX,OAAOH,KAAK;IAEd;MACE,OAAOJ,gBAAgB;EAC3B;AACF,CAAC;AAED,MAAMmB,YAAY,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC9B,MAAM,CAACC,SAAS,EAAEC,kBAAkB,CAAC,GAAG3B,UAAU,CAChDO,WAAW,EACXH,gBACF,CAAC;EAED,MAAMwB,oBAAoB,GAAIhB,IAAI,IAAK;IACrCe,kBAAkB,CAAC;MACjBjB,IAAI,EAAE,KAAK;MACXE,IAAI,EAAEA;IACR,CAAC,CAAC;EACJ,CAAC;EAED,MAAMiB,yBAAyB,GAAIZ,EAAE,IAAK;IACxCU,kBAAkB,CAAC;MACjBjB,IAAI,EAAE,QAAQ;MAEdO,EAAE,EAAEA;IACN,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMa,WAAW,GAAG;IAClBzB,KAAK,EAAEqB,SAAS,CAACrB,KAAK;IACtBC,WAAW,EAAEoB,SAAS,CAACpB,WAAW;IAAE;IACpCyB,OAAO,EAAEH,oBAAoB;IAC7BI,UAAU,EAAEH;EACd,CAAC;EAED,oBACE1B,OAAA,CAACF,WAAW,CAACgC,QAAQ;IAACC,KAAK,EAAEJ,WAAY;IAAAK,QAAA,EACtCX,KAAK,CAACW;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAE3B,CAAC;AAACd,EAAA,CAlCIF,YAAY;AAAAiB,EAAA,GAAZjB,YAAY;AAoClB,eAAeA,YAAY;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}