{"ast":null,"code":"var _jsxFileName = \"/Users/prabeshparajuli/Desktop/Food_app/src/Store/CartProvider.js\",\n  _s = $RefreshSig$();\nimport React, { useReducer } from \"react\";\nimport CartContext from \"./cart_context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\nconst cartreducer = (state, action) => {\n  switch (action.type) {\n    // case \"ADD\":\n    //   const updatedTotalAmount= state.totalAmount + action.item.price*action.item.amount;\n    //   const updatedItems=state.items.concat(action.item)\n    //   const existingCartItemIndex=state.items.findIndex((item)=>item.id===action.item.id)\n\n    //   // if (existingCartItemIndex !== -1){\n    //   //   state.items[existingCartItemIndex].amount += action.item.amount;\n    //   // }\n    //   if (existingCartItemIndex !== -1) {\n    //     // Convert the existing amount and the new amount to integers\n    //     const existingAmount = +state.items[existingCartItemIndex].amount;\n    //     const newAmount = +action.item.amount;\n\n    //     // Perform integer addition\n    //     state.items[existingCartItemIndex].amount = existingAmount + newAmount;\n    //   }\n\n    //   else{\n    //     state.items.concat(action.item)\n    //   }\n\n    //   return(\n    //     {\n    //       ...state,\n    //     items:updatedItems ,\n    //     totalAmount: updatedTotalAmount,\n    //     }\n\n    //   );\n    case \"ADD\":\n      const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n      if (existingCartItemIndex !== -1) {\n        // Convert the existing amount and the new amount to integers\n        const existingAmount = +state.items[existingCartItemIndex].amount;\n        const newAmount = +action.item.amount;\n\n        // Perform integer addition\n        state.items[existingCartItemIndex].amount = existingAmount + newAmount;\n      } else {\n        // Create a new array with the existing items and the new item\n        const updatedItems = [...state.items, action.item];\n        return {\n          ...state,\n          items: updatedItems,\n          totalAmount: state.totalAmount + action.item.price * action.item.amount\n        };\n      }\n      break;\n    // Don't forget to break after the \"if-else\" block\n\n    case \"REMOVE\":\n      return state;\n    default:\n      return defaultCartState;\n  }\n};\nconst CartProvider = props => {\n  _s();\n  const [cartState, dispatchCartAction] = useReducer(cartreducer, defaultCartState);\n  const addItemToCarthandler = item => {\n    dispatchCartAction({\n      type: \"ADD\",\n      item: item\n    });\n  };\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n\n  // this is the value\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    // amount as in quantity not price\n    addItem: addItemToCarthandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n_c = CartProvider;\nexport default CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","useReducer","CartContext","jsxDEV","_jsxDEV","defaultCartState","items","totalAmount","cartreducer","state","action","type","existingCartItemIndex","findIndex","item","id","existingAmount","amount","newAmount","updatedItems","price","CartProvider","props","_s","cartState","dispatchCartAction","addItemToCarthandler","removeItemFromCartHandler","cartContext","addItem","removeItem","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/prabeshparajuli/Desktop/Food_app/src/Store/CartProvider.js"],"sourcesContent":["import React, { useReducer } from \"react\";\nimport CartContext from \"./cart_context\";\n\nconst defaultCartState = {\n  items: [ ],\n  totalAmount: 0,\n};\n\nconst cartreducer = (state, action) => {\n  switch (action.type) {\n    // case \"ADD\":\n    //   const updatedTotalAmount= state.totalAmount + action.item.price*action.item.amount;\n    //   const updatedItems=state.items.concat(action.item)\n    //   const existingCartItemIndex=state.items.findIndex((item)=>item.id===action.item.id)\n\n    //   // if (existingCartItemIndex !== -1){\n    //   //   state.items[existingCartItemIndex].amount += action.item.amount;\n    //   // }\n    //   if (existingCartItemIndex !== -1) {\n    //     // Convert the existing amount and the new amount to integers\n    //     const existingAmount = +state.items[existingCartItemIndex].amount;\n    //     const newAmount = +action.item.amount;\n      \n    //     // Perform integer addition\n    //     state.items[existingCartItemIndex].amount = existingAmount + newAmount;\n    //   }\n      \n    //   else{\n    //     state.items.concat(action.item)\n    //   }\n\n    //   return(\n    //     {\n    //       ...state,\n    //     items:updatedItems ,\n    //     totalAmount: updatedTotalAmount,\n    //     }\n      \n    //   );\n    case \"ADD\":\n  const existingCartItemIndex = state.items.findIndex((item) => item.id === action.item.id);\n\n  if (existingCartItemIndex !== -1) {\n    // Convert the existing amount and the new amount to integers\n    const existingAmount = +state.items[existingCartItemIndex].amount;\n    const newAmount = +action.item.amount;\n\n    // Perform integer addition\n    state.items[existingCartItemIndex].amount = existingAmount + newAmount;\n  } else {\n    // Create a new array with the existing items and the new item\n    const updatedItems = [...state.items, action.item];\n    \n    return {\n      ...state,\n      items: updatedItems,\n      totalAmount: state.totalAmount + action.item.price * action.item.amount,\n    };\n  }\n  break; // Don't forget to break after the \"if-else\" block\n\n    \n    \n    \n      case \"REMOVE\":\n        return state;\n    \n    \n    \n        default:\n      return defaultCartState;\n  }\n};\n\n\n\n\nconst CartProvider = (props) => {\n  const [cartState, dispatchCartAction] = useReducer(\n    cartreducer,\n    defaultCartState\n  );\n\n  const addItemToCarthandler = (item) => {\n    dispatchCartAction({\n      type: \"ADD\",\n      item: item,\n    });\n  };\n\n  const removeItemFromCartHandler = (id) => {\n    dispatchCartAction({ \n      type: \"REMOVE\", \n\n      id: id });\n  };\n\n\n  // this is the value\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount, // amount as in quantity not price\n    addItem: addItemToCarthandler,\n    removeItem: removeItemFromCartHandler,\n  };\n\n  return (\n    <CartContext.Provider value={cartContext}>\n      {props.children}\n    </CartContext.Provider>\n  );\n};\n\nexport default CartProvider;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,OAAOC,WAAW,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,gBAAgB,GAAG;EACvBC,KAAK,EAAE,EAAG;EACVC,WAAW,EAAE;AACf,CAAC;AAED,MAAMC,WAAW,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACrC,QAAQA,MAAM,CAACC,IAAI;IACjB;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;;IAEA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA,KAAK,KAAK;MACZ,MAAMC,qBAAqB,GAAGH,KAAK,CAACH,KAAK,CAACO,SAAS,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKL,MAAM,CAACI,IAAI,CAACC,EAAE,CAAC;MAEzF,IAAIH,qBAAqB,KAAK,CAAC,CAAC,EAAE;QAChC;QACA,MAAMI,cAAc,GAAG,CAACP,KAAK,CAACH,KAAK,CAACM,qBAAqB,CAAC,CAACK,MAAM;QACjE,MAAMC,SAAS,GAAG,CAACR,MAAM,CAACI,IAAI,CAACG,MAAM;;QAErC;QACAR,KAAK,CAACH,KAAK,CAACM,qBAAqB,CAAC,CAACK,MAAM,GAAGD,cAAc,GAAGE,SAAS;MACxE,CAAC,MAAM;QACL;QACA,MAAMC,YAAY,GAAG,CAAC,GAAGV,KAAK,CAACH,KAAK,EAAEI,MAAM,CAACI,IAAI,CAAC;QAElD,OAAO;UACL,GAAGL,KAAK;UACRH,KAAK,EAAEa,YAAY;UACnBZ,WAAW,EAAEE,KAAK,CAACF,WAAW,GAAGG,MAAM,CAACI,IAAI,CAACM,KAAK,GAAGV,MAAM,CAACI,IAAI,CAACG;QACnE,CAAC;MACH;MACA;IAAO;;IAKH,KAAK,QAAQ;MACX,OAAOR,KAAK;IAIZ;MACF,OAAOJ,gBAAgB;EAC3B;AACF,CAAC;AAKD,MAAMgB,YAAY,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC9B,MAAM,CAACC,SAAS,EAAEC,kBAAkB,CAAC,GAAGxB,UAAU,CAChDO,WAAW,EACXH,gBACF,CAAC;EAED,MAAMqB,oBAAoB,GAAIZ,IAAI,IAAK;IACrCW,kBAAkB,CAAC;MACjBd,IAAI,EAAE,KAAK;MACXG,IAAI,EAAEA;IACR,CAAC,CAAC;EACJ,CAAC;EAED,MAAMa,yBAAyB,GAAIZ,EAAE,IAAK;IACxCU,kBAAkB,CAAC;MACjBd,IAAI,EAAE,QAAQ;MAEdI,EAAE,EAAEA;IAAG,CAAC,CAAC;EACb,CAAC;;EAGD;EACA,MAAMa,WAAW,GAAG;IAClBtB,KAAK,EAAEkB,SAAS,CAAClB,KAAK;IACtBC,WAAW,EAAEiB,SAAS,CAACjB,WAAW;IAAE;IACpCsB,OAAO,EAAEH,oBAAoB;IAC7BI,UAAU,EAAEH;EACd,CAAC;EAED,oBACEvB,OAAA,CAACF,WAAW,CAAC6B,QAAQ;IAACC,KAAK,EAAEJ,WAAY;IAAAK,QAAA,EACtCX,KAAK,CAACW;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAE3B,CAAC;AAACd,EAAA,CAlCIF,YAAY;AAAAiB,EAAA,GAAZjB,YAAY;AAoClB,eAAeA,YAAY;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}